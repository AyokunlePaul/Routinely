// Generated by Dagger (https://dagger.dev).
package com.ayokunlepaul.core.receivers;

import com.ayokunlepaul.core.notification.RoutinelyNotificationManager;
import dagger.MembersInjector;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AlarmReceiver_MembersInjector implements MembersInjector<AlarmReceiver> {
  private final Provider<RoutinelyNotificationManager> notificationManagerProvider;

  public AlarmReceiver_MembersInjector(
      Provider<RoutinelyNotificationManager> notificationManagerProvider) {
    this.notificationManagerProvider = notificationManagerProvider;
  }

  public static MembersInjector<AlarmReceiver> create(
      Provider<RoutinelyNotificationManager> notificationManagerProvider) {
    return new AlarmReceiver_MembersInjector(notificationManagerProvider);}

  @Override
  public void injectMembers(AlarmReceiver instance) {
    injectNotificationManager(instance, notificationManagerProvider.get());
  }

  public static void injectNotificationManager(AlarmReceiver instance,
      RoutinelyNotificationManager notificationManager) {
    instance.notificationManager = notificationManager;
  }
}
